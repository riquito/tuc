.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "tuc" "1" "Jun 13, 2022" "Tuc 0.10.0" "Tuc Manual"
.hy
.SH NAME
.PP
\f[B]tuc\f[] \[em] cut text or bytes and keep what you need
.SH SYNOPSIS
.PP
\f[B]cut\f[] [FLAGS]...
[OPTIONS]...
.SH DESCRIPTION
.PP
Cut text (or bytes) where a delimiter matches, then keep the desired
parts.
.PP
The data is read from standard input.
.SH FLAGS
.TP
.B \-g, \-\-greedy\-delimiter
Match consecutive delimiters as if it was one
.RS
.RE
.TP
.B \-p, \-\-compress\-delimiter
Print only the first delimiter of a sequence
.RS
.RE
.TP
.B \-s, \-\-only\-delimited
Print only lines containing the delimiter
.RS
.RE
.TP
.B \-V, \-\-version
Print version information
.RS
.RE
.TP
.B \-z, \-\-zero\-terminated
Line delimiter is NUL (), not LF ()
.RS
.RE
.TP
.B \-h, \-\-help
Print this help and exit
.RS
.RE
.TP
.B \-m, \-\-complement
Invert fields (e.g.
\[aq]2\[aq] becomes \[aq]1,3:\[aq])
.RS
.RE
.TP
.B \-j, \-\-(no\-)join
Print selected parts with delimiter inbetween
.RS
.RE
.SH OPTIONS
.PP
\f[B]\-f\f[], \f[B]\-\-fields\f[] [bounds]
.PD 0
.P
.PD
\ \ \ \ \ \ \ Fields to keep, 1\-indexed, comma separated.
.PD 0
.P
.PD
\ \ \ \ \ \ \ Use colon to include everything in a range.
.PD 0
.P
.PD
\ \ \ \ \ \ \ Fields can be negative (\-1 is the last field).
.PP
\ \ \ \ \ \ \ [default 1:]
.PP
\ \ \ \ \ \ \ e.g.
cutting on \[aq]\-\[aq] the string \[aq]a\-b\-c\-d\[aq]
.PD 0
.P
.PD
\ \ \ \ \ \ \ \ \ 1 => a
.PD 0
.P
.PD
\ \ \ \ \ \ \ \ \ 1: => a\-b\-c\-d
.PD 0
.P
.PD
\ \ \ \ \ \ \ \ \ 1:3 => a\-b\-c
.PD 0
.P
.PD
\ \ \ \ \ \ \ \ \ 3,2 => cb
.PD 0
.P
.PD
\ \ \ \ \ \ \ \ \ 3,1:2 => ca\-b
.PD 0
.P
.PD
\ \ \ \ \ \ \ \ \ \-3:\-2 => b\-c
.PP
\ \ \ \ \ \ \ To re\-apply the delimiter add \-j, to replace
.PD 0
.P
.PD
\ \ \ \ \ \ \ it add \-r (followed by the new delimiter)
.PP
\ \ \ \ \ \ \ You can also format the output using {} syntax
.PD 0
.P
.PD
\ \ \ \ \ \ \ e.g.
.PD 0
.P
.PD
\ \ \ \ \ \ \ \ \ \[aq]["{1}", "{2}"]\[aq] => ["a", "b"]
.PP
\ \ \ \ \ \ \ You can escape { and } using {{ and }}.
.PP
\f[B]\-b\f[], \f[B]\-\-bytes\f[] [bounds]
.PD 0
.P
.PD
\ \ \ \ \ \ \ Same as \-\-fields, but it keeps bytes
.PP
\f[B]\-c\f[], \f[B]\-\-characters\f[] [bounds]
.PD 0
.P
.PD
\ \ \ \ \ \ \ Same as \-\-fields, but it keeps characters
.PP
\f[B]\-l\f[], \f[B]\-\-lines\f[] [bounds]
.PD 0
.P
.PD
\ \ \ \ \ \ \ Same as \-\-fields, but it keeps lines
.PD 0
.P
.PD
\ \ \ \ \ \ \ Implies \-\-join.
To merge lines, use \-\-no\-join
.PP
\f[B]\-d\f[], \f[B]\-\-delimiter\f[] [delimiter]
.PD 0
.P
.PD
\ \ \ \ \ \ \ Delimiter used by \-\-fields to cut the text
.PD 0
.P
.PD
\ \ \ \ \ \ \ [default: \\t]
.PP
\f[B]\-r\f[], \f[B]\-\-replace\-delimiter\f[] [new delimiter]
.PD 0
.P
.PD
\ \ \ \ \ \ \ Replace the delimiter with the provided text
.PP
\f[B]\-t\f[], \f[B]\-\-trim\f[] [type]
.PD 0
.P
.PD
\ \ \ \ \ \ \ Trim the delimiter (greedy).
.PD 0
.P
.PD
\ \ \ \ \ \ \ Valid values are (l|L)eft, (r|R)ight, (b|B)oth
.SH OPTIONS PRECEDENCE
.PP
\-\-trim and \-\-compress\-delimiter are applied before \-\-fields or
similar
.SH MEMORY CONSUMPTION
.PP
\-\-characters and \-\-fields read and allocate memory one line at a
time
.PP
\-\-lines allocate memory one line at a time as long as the requested
fields are ordered and non\-negative (e.g.
\-l 1,3:4,4,7), otherwise it allocates the whole input in memory (it
also happens when \-p or \-m are being used)
.PP
\-\-bytes allocate the whole input in memory
.SH BUGS
.PP
See GitHub Issues: <https://github.com/riquito/tuc/issues>
.SH AUTHOR
.PP
Riccardo Attilio Galli <riccardo@sideralis.org>
.SH SEE ALSO
.PP
\f[B]cut(1)\f[], \f[B]sed(1)\f[], \f[B]awk(1)\f[]
